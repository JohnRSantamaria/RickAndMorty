{"ast":null,"code":"export default function Validation(_ref) {\n  let {\n    username,\n    password\n  } = _ref;\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  const regexPassword = /^(?=.\\d).{6,10}$/m;\n  const errors = {};\n  if (!username) errors.username = \"El nombre de usuario no puede estar vacío.\";\n  if (username.length > 35) errors.username = \"El nombre de usuario no puede tener más de 35 caracteres.\";\n  if (!regexEmail.test(username)) errors.username = \"El nombre de usuario tiene que ser un email\";\n  return errors;\n}\n_c = Validation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","username","password","regexEmail","regexPassword","errors","length","test"],"sources":["C:/Users/ResetStoreX/Desktop/DOM- Ejercicios Prácticos/RickAndMorty/FT-M2/06-React-Intro/homework/02 - Integration/src/components/validation.js"],"sourcesContent":["\r\nexport default function Validation({username, password}) {\r\n    const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    const regexPassword = /^(?=.\\d).{6,10}$/m;\r\n    const errors = {};\r\n    \r\n    if(!username) errors.username = \"El nombre de usuario no puede estar vacío.\";\r\n    if(username.length > 35) errors.username = \"El nombre de usuario no puede tener más de 35 caracteres.\";\r\n    if(!regexEmail.test(username)) errors.username = \"El nombre de usuario tiene que ser un email\"\r\n    return errors;\r\n  }"],"mappings":"AACA,eAAe,SAASA,UAAT,OAA0C;EAAA,IAAtB;IAACC,QAAD;IAAWC;EAAX,CAAsB;EACrD,MAAMC,UAAU,GAAG,2CAAnB;EACA,MAAMC,aAAa,GAAG,mBAAtB;EACA,MAAMC,MAAM,GAAG,EAAf;EAEA,IAAG,CAACJ,QAAJ,EAAcI,MAAM,CAACJ,QAAP,GAAkB,4CAAlB;EACd,IAAGA,QAAQ,CAACK,MAAT,GAAkB,EAArB,EAAyBD,MAAM,CAACJ,QAAP,GAAkB,2DAAlB;EACzB,IAAG,CAACE,UAAU,CAACI,IAAX,CAAgBN,QAAhB,CAAJ,EAA+BI,MAAM,CAACJ,QAAP,GAAkB,6CAAlB;EAC/B,OAAOI,MAAP;AACD;KATqBL,U"},"metadata":{},"sourceType":"module"}