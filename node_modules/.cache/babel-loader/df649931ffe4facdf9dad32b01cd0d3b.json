{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ResetStoreX\\\\Desktop\\\\DOM- Ejercicios Pr\\xE1cticos\\\\RickAndMorty\\\\FT-M2\\\\06-React-Intro\\\\homework\\\\02 - Integration\\\\src\\\\components\\\\SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport style from './SearchBar.module.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(props) {\n  _s();\n\n  const {\n    onSearch\n  } = props;\n  const [userInput, setUserInput] = useState(\"\");\n\n  function handleChange(e) {\n    /*Cuando ocurra un cambio en el value del input, tomar ese value\r\n      y guadarlo en el estado userInput\r\n    */\n    !!e.target.value ? setUserInput(e.target.value) : console.log(\"No hay nada\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.Search,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      value: userInput,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSearch(userInput),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchBar, \"5m2DpaTPYgx4BaqjxYL18HEa8GU=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["style","React","useState","SearchBar","props","onSearch","userInput","setUserInput","handleChange","e","target","value","console","log","Search"],"sources":["C:/Users/ResetStoreX/Desktop/DOM- Ejercicios Pr√°cticos/RickAndMorty/FT-M2/06-React-Intro/homework/02 - Integration/src/components/SearchBar.jsx"],"sourcesContent":["import style from './SearchBar.module.css'\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport default function SearchBar(props) {\r\n   const {onSearch } = props;\r\n   \r\n   const [userInput, setUserInput] = useState(\"\");\r\n\r\n   function handleChange(e){\r\n      /*Cuando ocurra un cambio en el value del input, tomar ese value\r\n        y guadarlo en el estado userInput\r\n      */\r\n      !!e.target.value?setUserInput(e.target.value): console.log(\"No hay nada\");\r\n   }\r\n\r\n   \r\n   return (\r\n      <div className={style.Search}>\r\n         <input type='search' value={userInput} onChange ={handleChange}/>\r\n         <button onClick={()=> onSearch(userInput)}>Agregar</button>\r\n      </div>\r\n   );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACtC,MAAM;IAACC;EAAD,IAAcD,KAApB;EAEA,MAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;EAEA,SAASM,YAAT,CAAsBC,CAAtB,EAAwB;IACrB;AACN;AACA;IACM,CAAC,CAACA,CAAC,CAACC,MAAF,CAASC,KAAX,GAAiBJ,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7B,GAA+CC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA/C;EACF;;EAGD,oBACG;IAAK,SAAS,EAAEb,KAAK,CAACc,MAAtB;IAAA,wBACG;MAAO,IAAI,EAAC,QAAZ;MAAqB,KAAK,EAAER,SAA5B;MAAuC,QAAQ,EAAGE;IAAlD;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAQ,OAAO,EAAE,MAAKH,QAAQ,CAACC,SAAD,CAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAMF;;GAnBuBH,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}